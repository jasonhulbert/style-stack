@import '../../core/query.core';
@import '../base/font.lib';
@import '../utils/color.lib';
@import '../utils/spacing.lib';

$input-height: size-value(8) !default;
$input-padding: size-value(2) !default;
$input-font-size: 0.9rem !default;
$input-line-height: 1.5 !default;
$input-font-stack: 'primary' !default;
$input-font-weight: 'default' !default;
$input-color: color-value('black') !default;
$input-placeholder-color: color-value('black', $alpha: 0.3) !default;
$input-border-width: 0.1rem !default;
$input-border-radius: 0.2rem !default;
$input-border-color: color-value('grey4') !default;
$input-bg: color-value('white') !default;
$input-focus-border-color: color-value('dark') !default;
$input-focus-bg: color-value('white') !default;
$input-focus-outline-style: solid !default;
$input-focus-outline-color: color-value('focus', $alpha: 0.5) !default;
$input-focus-outline-offset: size-value(0.5) !default;
$input-focus-outline-width: size-value(0.5) !default;
$input-transition: border-color 200ms ease, background-color 200ms ease !default;
$input-scale-map: (
    'none': 1,
    'xs': 0.7,
    'sm': 0.9,
    'md': 1.1,
    'lg': 1.3,
    'xl': 1.5,
    'xxl': 1.7
) !default;

@mixin input() {
    @include font($input-font-stack);
    width: 100%;
    height: $input-height;
    font-size: $input-font-size;
    padding: 0 $input-padding;
    color: $input-color;
    border: $input-border-width solid $input-border-color;
    border-radius: $input-border-radius;
    background: $input-bg;
    transition: $input-transition;
    vertical-align: middle;

    &::before,
    &::after {
        outline: none;
    }
}

@mixin input-resets() {
    ::-ms-clear {
        display: none;
        width: 0;
        height: 0;
    }

    ::-ms-reveal {
        display: none;
        width: 0;
        height: 0;
    }

    input[type='number'] {
        -moz-appearance: textfield;
    }

    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
        -webkit-appearance: none;
    }
}

@mixin input-placeholder($color: $input-placeholder-color) {
    &::placeholder {
        color: $color
    }

    &::-webkit-input-placeholder {
        color: $color
    }

    &::-moz-placeholder {
        color: $color
    }

    &::-ms-input-placeholder {
        color: $color
    }
}

@mixin input-focus() {
    border-color: $input-focus-border-color;
    background: $input-focus-bg;
    outline-offset: $input-focus-outline-offset;
    outline: $input-focus-outline-color $input-focus-outline-style $input-focus-outline-width;
}

@mixin input-scale($scale-key) {
    $scale-value: 1;

    @if map-has-key($input-scale-map, $scale-key) {
        $scale-value: map-get($input-scale-map, $scale-key);
    }

    height: $input-height * $scale-value;
    font-size: $input-font-size * $scale-value;
    padding: 0 $input-padding * $scale-value;
}

@mixin input-theme($theme-key) {
    @include input-placeholder(color-value($theme-key, $alpha: 0.5));
    border-color: color-value($theme-key);
}

@mixin input-focus-theme($theme-key) {
    border-color: color-darken-until(color-value($theme-key), 30%);
    outline-color: color-value($theme-key, $alpha: 0.3);
}

@mixin input-center() {
    text-align: center;
}

@mixin input-styles() {
    @include input-resets();

    .input {
        @include input();
        @include input-placeholder();

        &:focus:not([tabindex='-1']) {
            @include input-focus();
        }
    }

    @each $scale-key in map-keys($input-scale-map) {
        .input-scale-#{$scale-key} {
            @include input-scale($scale-key);
        }
    }

    .input-center {
        @include input-center();
    }

    @each $theme-key in map-keys($color-theme-map) {
        .input-theme-#{$theme-key} {
            @include input-theme($theme-key);

            &:focus:not([tabindex='-1']) {
                @include input-focus-theme($theme-key);
            }
        }
    }

    @each $query-key in map-keys($query-map) {
        @each $scale-key in map-keys($input-scale-map) {
            .input-scale-#{$scale-key}\@#{$query-key} {
                @include input-scale($scale-key);
            }
        }
    }

    @if mixin-exists('input-hook') {
        @include input-hook();
    }
}
