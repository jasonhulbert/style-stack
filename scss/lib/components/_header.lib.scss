@import '../../core/query.core';
@import '../../core/selector.core';
@import '../base/font.lib';
@import '../base/global.lib';
@import '../modifiers/box.lib';

$header-name: 'header' !default;
$header-family: 'secondary' !default;
$header-scales: (
    'none': 1,
    'sm': 0.9,
    'md': 1.25,
    'lg': 1.5,
    'xl': 2.25,
    'xxl': 2.75
) !default;
$header-margin: 0 0 box-value(6) !default;
$header-line-height: 1.1 !default;

@mixin header-base() {
    @include font-family($header-family);
    margin: $header-margin;
    line-height: $header-line-height;
}

@mixin header-scale($scale-key) {
    $scale-value: 1;

    @if map-has-key($header-scales, $scale-key) {
        $scale-value: map-get($header-scales, $scale-key);
    } @else {
        @warn 'header scale "#{$scale-key}" does not exist in "$header-scales"';
    }

    font-size: $global-body-font-size * $scale-value;
}

@mixin header-no-margin() {
    margin-top: 0;
    margin-bottom: 0;
}

@mixin header() {
    $name: selector-prefix($header-name);

    .#{$name} {
        @include header-base();
    }

    .#{$name}-upper {
        text-transform: uppercase;
    }

    .#{$name}-no-margin {
        @include header-no-margin();
    }

    @each $scale-key in map-keys($header-scales) {
        .#{$name}-scale-#{$scale-key} {
            @include header-scale($scale-key);
        }
    }

    @each $weight in map-get($font-weights, $header-family) {
        .#{$name}-weight-#{$weight} {
            font-weight: $weight;
        }
    }

    @each $query-key in map-keys($query-map) {
        @include query($query-key) {
            .#{$name}-no-margin\@#{$query-key} {
                @include header-no-margin();
            }

            @each $scale-key in map-keys($header-scales) {
                .#{$name}-scale-#{$scale-key}\@#{$query-key} {
                    @include header-scale($scale-key);
                }
            }
        }
    }

    @if mixin-exists('header-hook') {
        @include header-hook($name);
    }
}
